# SPDX-License-Identifier: ISC

- name: Ensure libvirt group exists
  ansible.builtin.user:
    name: libvirt
    state: present

- name: Add nomad user
  ansible.builtin.user:
    name: nomad
    state: present
    groups: libvirt
    append: true
    home: /etc/nomad.d
    shell: /bin/false
    system: true

- name: Create directories
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: nomad
    group: nomad
    mode: "0700"
  loop:
    - path: /etc/nomad
    - path: /etc/nomad.d
    - path: /etc/nomad/data
    - path: /etc/nomad/plugins
  loop_control:
    label: "{{ item.path }}"

- name: Configure nomad
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "/etc/nomad.d/{{ item.dest }}"
    owner: nomad
    group: nomad
    mode: "0600"
  loop:
    - src: nomad.hcl.j2
      dest: /etc/nomad.d/nomad.hcl
  loop_control:
    label: "{{ item.dest }}"

- name: Add hashicorp-nomad-stable repository
  ansible.builtin.yum_repository:
    name: nomad
    state: present
    enabled: true
    baseurl: https://rpm.releases.hashicorp.com/fedora/$releasever/$basearch/stable
    description: hashicorp-nomad-stable
    file: hashicorp-nomad-stable
    gpgcheck: true
    gpgkey: https://rpm.releases.hashicorp.com/gpg
    include: nomad

- name: Add packages
  ansible.builtin.package:
    name: "{{ nomad_packages }}"
    state: present

- name: Start and enable user podman.socket
  ansible.builtin.systemd:
    name: podman.socket
    state: started
    enabled: true

- name: Download and verify nomad-driver-podman
  ansible.builtin.get_url:
    url: "{{ nomad_driver_podman_url_prefix }}_linux_amd64.zip"
    dest: /tmp/nomad-driver-podman.zip
    checksum: "sha256:{{ nomad_driver_podman_url_prefix }}_SHA256SUMS"
    owner: nomad
    group: nomad
    mode: "0700"

- name: Unarchive plugins
  ansible.builtin.unarchive:
    src: "{{ item.src }}"
    dest: /etc/nomad/plugins
    owner: nomad
    group: nomad
    mode: "0700"
    remote_src: true
  loop:
    - src: /tmp/nomad-driver-podman.zip
  loop_control:
    label: "{{ item.src }}"

# FIXME: If your operating system's default ephemeral port range overlaps with
# Nomad's dynamic port range, you should tune the OS to avoid this overlap.
# - https://www.nomadproject.io/docs/install/production/requirements#ports-used
- name: Open required ports
  ansible.posix.firewalld:
    port: "{{ item.port }}"
    state: enabled
    permanent: true
  loop:
    - port: 4646/tcp
    - port: 4647/tcp
    - port: 4648/tcp
    - port: 4648/udp
  loop_control:
    label: "{{ item.port }}"

- name: Start nomad.service
  ansible.builtin.systemd:
    name: nomad.service
    state: started
    enabled: true
