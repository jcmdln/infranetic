# SPDX-License-Identifier: ISC

[tox]
envlist =
    ansible-lint
    packer-validate
    yamllint
ignore_basepython_conflict = true
isolated_build = true
minversion = 3.20
skip_missing_interpreters = true

[testenv]
basepython = python3
setenv =
    PYTHONDONTWRITEBYTECODE=true
    PYTHONUNBUFFERED=true
skip_install = true

#
# Lint
#

[testenv:ansible-lint]
commands =
    ansible-lint --version
    ansible-lint {toxinidir}/tools/setup-vagrant.yml {toxinidir}/site.yml
deps =
    -r {toxinidir}/requirements/ansible-lint.txt
setenv =
    {[testenv]setenv}
    ANSIBLE_ROLES_PATH={toxinidir}/roles

[testenv:packer-validate]
allowlist_externals =
    packer
commands =
    packer version
    packer validate -syntax-only {toxinidir}/fedora.pkr.hcl

[testenv:yamllint]
commands =
    yamllint --version
    yamllint {toxinidir}
deps =
    -r {toxinidir}/requirements/yamllint.txt

#
# Utils
#

[testenv:build]
allowlist_externals =
    packer
    vagrant
commands =
    packer version
    vagrant --version
    packer build -var="os_version=35" {toxinidir}/tools/fedora.pkr.hcl
    vagrant box add {toxinidir}/build/35/x86_64/manifest.json

[testenv:clean]
allowlist_externals =
    sh
    packer
    vagrant
commands =
    vagrant --version
    vagrant destroy -f
    sh -c "virsh vol-list --pool default | awk '/infranetic-VAGRANTSLASH/ \{print $1}' | \
        xargs virsh vol-delete --pool default --vol || echo 'No volumes to delete!'"

[testenv:deploy]
allowlist_externals =
    vagrant
commands =
    vagrant --version
    vagrant up mgmt1
    ansible-playbook -i {toxinidir}/tools/sample.inventory.yml -l mgmt1.infranetic \
        {toxinidir}/site.yml
deps =
    -r {toxinidir}/requirements/ansible.txt
